name: Tests and Quality Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-mock pytest-asyncio ruff mypy

    - name: Setup test fixtures
      run: |
        python scripts/create_test_scorecard.py
      shell: bash

    - name: Run linting with ruff
      run: |
        ruff check src/ tests/ --output-format=github
      continue-on-error: true

    - name: Run type checking with mypy
      run: |
        mypy --config-file pyproject.toml
      continue-on-error: true

    - name: Run unit tests
      run: |
        if [ -d "tests/unit" ]; then
          pytest tests/unit/ -v --cov=src --cov-report=xml --cov-report=term-missing -m "not slow"
        else
          echo "No unit tests directory found, skipping"
        fi
      shell: bash

    - name: Run integration tests
      run: |
        if [ -d "tests/integration" ]; then
          pytest tests/integration/ -v -m "not slow"
        else
          echo "No integration tests directory found, skipping"
        fi
      shell: bash
      continue-on-error: true

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-${{ matrix.os }}-py${{ matrix.python-version }}
        fail_ci_if_error: false

    - name: Archive test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.os }}
        path: |
          htmlcov/
          coverage.xml

  code-quality:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black==23.12.1 isort ruff mypy

    - name: Check code formatting with black
      run: |
        black --check src/ --line-length 100
        if [ -d "tests" ]; then
          black --check tests/ --line-length 100
        fi
      shell: bash

    - name: Check import sorting with isort
      run: |
        isort --check-only src/ --profile black
        if [ -d "tests" ]; then
          isort --check-only tests/ --profile black
        fi
      shell: bash

    - name: Lint with ruff
      run: |
        ruff check src/

    - name: Type check with mypy
      run: |
        mypy --config-file pyproject.toml

  performance:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-benchmark

    - name: Run performance tests
      run: |
        if [ -d "tests/performance" ]; then
          pytest tests/performance/ -v -m slow --benchmark-only
        else
          echo "No performance tests directory found, skipping"
        fi
      shell: bash
      continue-on-error: true
